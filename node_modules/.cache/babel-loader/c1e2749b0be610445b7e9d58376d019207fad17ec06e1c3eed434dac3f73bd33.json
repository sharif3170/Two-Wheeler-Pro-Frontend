{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\phata\\\\OneDrive\\\\Desktop\\\\VaahanBazaar\\\\front\\\\src\\\\contexts\\\\UserContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Load user data from localStorage on initial load\n  useEffect(() => {\n    const initAuth = async () => {\n      const savedUser = localStorage.getItem('user');\n      if (savedUser) {\n        try {\n          const userData = JSON.parse(savedUser);\n          setUser(userData);\n          // Store user ID separately for favorites\n          if (userData._id) {\n            localStorage.setItem('userId', userData._id);\n          }\n        } catch (err) {\n          console.error('Error parsing user data:', err);\n          localStorage.removeItem('user');\n          localStorage.removeItem('userId');\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n\n  // Save user data to localStorage whenever it changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n      // Store user ID separately for favorites\n      if (user._id) {\n        localStorage.setItem('userId', user._id);\n      }\n    } else {\n      localStorage.removeItem('user');\n      localStorage.removeItem('userId');\n    }\n  }, [user]);\n  const login = userData => {\n    setUser(userData);\n    // Store user ID separately for favorites\n    if (userData._id) {\n      localStorage.setItem('userId', userData._id);\n    }\n  };\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('userId');\n  };\n  const signup = userData => {\n    setUser(userData);\n    // Store user ID separately for favorites\n    if (userData._id) {\n      localStorage.setItem('userId', userData._id);\n    }\n  };\n  const updateUser = userData => {\n    setUser(prevUser => ({\n      ...prevUser,\n      ...userData\n    }));\n  };\n\n  // Add a mock isFavorite function for now\n  const isFavorite = vehicleId => {\n    // This is a placeholder implementation\n    // In a real app, this would check against actual favorites data\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      user,\n      loading,\n      login,\n      logout,\n      signup,\n      updateUser,\n      isFavorite\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"Ui6DLq5vMU2GgsRY6PPBrtV3hI8=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","UserContext","UserProvider","children","_s","user","setUser","loading","setLoading","initAuth","savedUser","localStorage","getItem","userData","JSON","parse","_id","setItem","err","console","error","removeItem","stringify","login","logout","signup","updateUser","prevUser","isFavorite","vehicleId","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/phata/OneDrive/Desktop/VaahanBazaar/front/src/contexts/UserContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\n\nconst UserContext = createContext();\n\nexport const UserProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Load user data from localStorage on initial load\n  useEffect(() => {\n    const initAuth = async () => {\n      const savedUser = localStorage.getItem('user');\n      \n      if (savedUser) {\n        try {\n          const userData = JSON.parse(savedUser);\n          setUser(userData);\n          // Store user ID separately for favorites\n          if (userData._id) {\n            localStorage.setItem('userId', userData._id);\n          }\n        } catch (err) {\n          console.error('Error parsing user data:', err);\n          localStorage.removeItem('user');\n          localStorage.removeItem('userId');\n        }\n      }\n      \n      setLoading(false);\n    };\n    \n    initAuth();\n  }, []);\n\n  // Save user data to localStorage whenever it changes\n  useEffect(() => {\n    if (user) {\n      localStorage.setItem('user', JSON.stringify(user));\n      // Store user ID separately for favorites\n      if (user._id) {\n        localStorage.setItem('userId', user._id);\n      }\n    } else {\n      localStorage.removeItem('user');\n      localStorage.removeItem('userId');\n    }\n  }, [user]);\n\n  const login = (userData) => {\n    setUser(userData);\n    // Store user ID separately for favorites\n    if (userData._id) {\n      localStorage.setItem('userId', userData._id);\n    }\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('userId');\n  };\n\n  const signup = (userData) => {\n    setUser(userData);\n    // Store user ID separately for favorites\n    if (userData._id) {\n      localStorage.setItem('userId', userData._id);\n    }\n  };\n\n  const updateUser = (userData) => {\n    setUser(prevUser => ({\n      ...prevUser,\n      ...userData\n    }));\n  };\n\n  // Add a mock isFavorite function for now\n  const isFavorite = (vehicleId) => {\n    // This is a placeholder implementation\n    // In a real app, this would check against actual favorites data\n    return false;\n  };\n\n  return (\n    <UserContext.Provider value={{\n      user,\n      loading,\n      login,\n      logout,\n      signup,\n      updateUser,\n      isFavorite\n    }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n\nexport const useUser = () => {\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}